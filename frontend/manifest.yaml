apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user www-data;
    worker_processes 4;
    pid /var/run/nginx.pid;

    events {
      worker_connections 768;
      # multi_accept on;
    }

    http {

      ##
      # Basic Settings
      ##

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      large_client_header_buffers 6 32k;
      client_max_body_size 100m;

      # server_names_hash_bucket_size 64;
      # server_name_in_redirect off;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      ##
      # Logging Settings
      ##
      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log debug; # change from debug to warn or error for production

      ##
      # Gzip Settings
      ##
      gzip on;
      gzip_disable "msie6";

      ##
      # Virtual Host Configs
      ##

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-enabled/*;

      server {
        listen       8080;
        server_name  localhost;

        proxy_http_version 1.1;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        #error_log /dev/stdout debug;
        #rewrite_log on;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            ssi    on;
        }

        location /images/ {
            expires 5s;
            root   /usr/share/nginx/html;
            try_files $uri /images/placeholder.png;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /api/ { 
            proxy_pass http://backend:8080/;
        }

        }

    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: expense
  labels:
    project: expense
    environment: dev
    created_by: HemanthKumar
    module: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      project: expense
      environment: dev
      created_by: HemanthKumar
      module: frontend
  template:
    metadata:
      labels:
        project: expense
        environment: dev
        created_by: HemanthKumar
        module: frontend
    spec:
      containers:
        - name: frontend
          image: hemanthkumar75/frontend:v2
          imagePullPolicy: Always
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            tcpScoket: 
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
      volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-conf
---
kind: Service
apiVersion: v1
metadata:
  name: frontend
  namespace: expense
spec:
  selector:
    project: expense
    environment: dev
    created_by: HemanthKumar
    module: frontend
  type: LoadBalancer
  ports:
  - name: frontend
    protocol: TCP
    port: 8080            # This is the external-facing port exposed by the Service. It's the port where users or other services can access your service.
    targetPort: 80        # This is the port inside the containers (pods) that the Service forwards traffic to.
